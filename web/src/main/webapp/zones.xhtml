<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
    xmlns:s="http://jboss.com/products/seam/taglib"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:rich="http://richfaces.org/rich"
    xmlns:a4j="http://richfaces.org/a4j"
    template="layout/template.xhtml">

    <ui:define name="body">
        <h1>#{messages.ZoneListing}</h1>
        
        <h:form id="zonesForm" rendered="#{zonePaginationDAO.numRecords > 0}">
        	<a4j:queue ignoreDupResponses="true"  requestDelay="10" />
	        <rich:dataTable id="zoneTable" var="zone" value="#{zoneDataModel}" reRender="ds" rows="20" columnClasses="top,top,top,top" onRowMouseOver="this.style.backgroundColor='#F1F1F1'" onRowMouseOut="this.style.backgroundColor='#{a4jSkin.tableBackgroundColor}'" width="100%;">

	        	<f:facet name="header">
					<h:outputText value="#{messages['Header.Zones']}" />
	        	</f:facet>

	        	<rich:column styleClass="#{zoneDataModel.selectedZones[zone] ? 'selectedRow' : ''}">
	        		<h:selectBooleanCheckbox value="#{zoneDataModel.selectedZones[zone]}">
	        			<a4j:support event="onclick" requestDelay="5" reRender="zonesForm" ></a4j:support>
	        		</h:selectBooleanCheckbox>
	        	</rich:column>

	        	<rich:column sortable="true" sortBy="#{zone.name}" filterBy="#{zone.name}" filterEvent="onkeyup" filterValue="#{zoneDataModel.filterValue}" width="60%;" styleClass="#{zoneDataModel.selectedZones[zone] ? 'selectedRow' : ''}">	
	        		<f:facet name="header">
	        			<h:outputText value="#{messages.Zone}" />
	        		</f:facet>
				<span class="zoneName">
					<a4j:commandLink action="#{zoneAction.viewRecords(zone)}" value="#{zone.name}" rendered="#{zone.type != 'SLAVE'}" />
					<a4j:commandLink action="#{zoneAction.viewSlave(zone)}" value="#{zone.name}" rendered="#{zone.type == 'SLAVE'}"/>
				</span>
				<span class="zonetooltip"> 
					<span class="SimpleTip" onmouseover="javascript:this.className='SimpleTipHover'" onmouseout="javascript:this.className='SimpleTip'">
						<h:outputText value="(#{zoneDAO.getNumRecords(zone.name)})"/>
						<div>#{messages['Zones.ToolTip']}</div>
					</span>
				</span>
				<div style="clear:both;"></div>
				</rich:column>
	        	
	        	<rich:column sortable="true" sortBy="#{zone.type}" styleClass="#{zoneDataModel.selectedZones[zone] ? 'selectedRow' : ''}">
	        		<f:facet name="header">
	        			<h:outputText value="Type"/>
	        		</f:facet>
	        		<h:outputText value="#{zone.type}"/>
	        	</rich:column>

	        	
				<rich:column sortBy="#{zone.dateCreated}" styleClass="#{zoneDataModel.selectedZones[zone] ? 'selectedRow' : ''}">
					<f:facet name="header">
						<h:outputText value="#{messages.DateCreated}" />
					</f:facet>
					<h:outputText value="#{zone.dateCreated}">
						<s:convertDateTime type="both" dateStyle="medium" timeZone="#{timeZone}"/>
					</h:outputText>
				</rich:column>

	        	<rich:column sortBy="#{zone.dateModified}" styleClass="#{zoneDataModel.selectedZones[zone] ? 'selectedRow' : ''}">
					<f:facet name="header">
						<h:outputText value="#{messages.DateModified}" />
					</f:facet>
					<h:outputText value="#{zone.dateModified}">
						<s:convertDateTime type="both" dateStyle="medium" timeZone="#{timeZone}"/>
					</h:outputText>
				</rich:column>


	        	<f:facet name="footer">
	        		<rich:datascroller for="zoneTable" id="ds" renderIfSinglePage="false" action="#{zoneDataModel.update}"/>
	        	</f:facet>
	        </rich:dataTable>
	        <h:commandButton action="confirm" value="#{messages.DeleteSelected}" rendered="#{zonePaginationDAO.numRecords > 0}" />
		</h:form>
		
		<rich:panel rendered="#{zonePaginationDAO.numRecords == 0}">
			#{messages.NoZoneWarning}
		</rich:panel>
		
		<rich:spacer width="1" height="25"></rich:spacer>
		<rich:separator lineType="solid" height="3" ></rich:separator>
		<rich:spacer width="1" height="25"></rich:spacer>
		
		<script>
        	function togglemaster(){
            	var selectMenu = $("zoneForm:zoneTypeField:zoneTypeFieldMenu");
            	var masterIPLabelElement = $("zoneForm:masterIPFieldLabel");
            	var masterIPElement = $("zoneForm:masterIPFieldLabel:masterIPField");
            	var parentDomainElementLabel = $("zoneForm:parentZoneNameLabel")
            	if(selectMenu.value == 'SLAVE'){
                	masterIPLabelElement.show();
                	parentDomainElementLabel.hide();
            	} else {
            		masterIPLabelElement.hide();
                	parentDomainElementLabel.show();
            	}
        	}
        </script>
		
		
		<h:form id="zoneForm">
		<rich:panel>
			<f:facet name="header">
				<h:outputText value="#{messages.CreateZone}" />
			</f:facet>
			
			<h:panelGrid columns="1">
			
				<ui:include src="/includes/requiredMessage.xhtml" />
		
				<s:decorate id="zoneNameField" template="layout/edit.xhtml">
					<ui:define name="label">#{messages.ZoneName}</ui:define>
					<h:inputText id="zoneName" value="#{newDomain.name}" required="true"/>
				</s:decorate>
				
				<s:decorate id="zoneTypeField" template="layout/edit.xhtml">
					<ui:define name="label">#{messages['Zones.ZonesType']}</ui:define>
					<h:selectOneMenu id="zoneTypeFieldMenu" value="#{newDomain.type}" required="true" immediate="true" onchange="togglemaster()" >
						<s:selectItems value="#{domainTypes}" var="type" label="#{type}"/>
					</h:selectOneMenu>
				</s:decorate>
				
				<s:decorate id="masterIPFieldLabel" template="layout/edit.xhtml" style="#{domain.type == 'SLAVE' ? 'display:block;' : 'display:none;'}">
					<ui:define name="label">#{messages['SlaveZone.IPOfMaster']}</ui:define>
					<h:inputText id="masterIPField" value="#{newDomain.master}" required="false"/>
				</s:decorate>
				
			</h:panelGrid>
	</rich:panel>
	<h:commandButton value="#{messages.CreateZone}" action="#{zoneAction.createZone(newDomain)}" />
	</h:form>
	
		
    </ui:define>
</ui:composition>
